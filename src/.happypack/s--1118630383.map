{"version":3,"sources":["src\\router\\index.js"],"names":["Vue","Router","routes","use","router","base","_basepath_","beforeEach","to","from","next","meta","fullScreen","SSOPRole","sessionStorage","SSOPRank1","SSOPRank","IsMaintenanceRole","ProvincePrefixNum","status","requireAuth","toPath","path","isBranchLimit","indexOf","isSystemUpdate","isProvinceSwitch","isAccessRecord","title","document","afterEach"],"mappings":"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","file":"index.js","sourceRoot":"D:/07-VUE/WaterSource","sourcesContent":["import Vue from 'vue'\r\nimport Router from 'vue-router'\r\n\r\nimport routes from './data/routes.js'\r\n// import store from '../store';\r\n\r\nVue.use(Router)\r\n\r\nvar router = new Router({\r\n  // mode: 'history',\r\n  base: _basepath_,\r\n  routes: routes\r\n})\r\nrouter.beforeEach((to, from, next) => {\r\n  if (to.meta.fullScreen) {\r\n    // store.dispatch(\"saveFullScreen\", true);\r\n  } else {\r\n    // store.dispatch(\"saveFullScreen\", false);\r\n  }\r\n  \r\n  // 查看当前用户权限\r\n  const SSOPRole = sessionStorage.SSOPRole;\r\n  let SSOPRank1 = sessionStorage.SSOPRank;\r\n  // 是否可以查看应用系统维护导航\r\n  const IsMaintenanceRole = sessionStorage.IsMaintenanceRole === \"1\";\r\n  // 总行应用 88   非88 显示总行应用、分行应用\r\n  const ProvincePrefixNum = sessionStorage.ProvincePrefixNum;\r\n  // go：正常跳转； stay：不跳转； home：回到首页。\r\n  let status = 'go';\r\n  // to路由权限\r\n  let requireAuth = to.meta.requireAuth;\r\n  // to路由path\r\n  let toPath = to.path;\r\n  // 总行应用时访问分行应用\r\n  let isBranchLimit = requireAuth === '1' && ProvincePrefixNum === '88' && toPath.indexOf(\"/home/3\") > -1;\r\n  // 是否有权限访问应用系统更新\r\n  let isSystemUpdate = requireAuth === 'system-update' && IsMaintenanceRole;\r\n  // 是否有权限访问机构开关、访问量统计\r\n  let isProvinceSwitch = SSOPRank1 === '5' && requireAuth === 'province-switch';\r\n  let isAccessRecord = SSOPRank1 === '5' && requireAuth === 'access-record';\r\n\r\n  if (SSOPRole === '3') {\r\n    // 不能访问用户映射， 3 2 1 system-update\r\n    if (requireAuth === '3' || requireAuth === '2' || requireAuth === '1' || isSystemUpdate || requireAuth === 'authen' || isProvinceSwitch || isAccessRecord) {\r\n      if (isBranchLimit) {\r\n        status = 'stay';\r\n      } else {\r\n        status = 'go';\r\n      }\r\n    } else {\r\n      status = 'stay';\r\n    }\r\n  } else if (SSOPRole === '2') {\r\n    // 不能访问权限分配， 2 1 map-manage system-update\r\n    if (requireAuth === '2' || requireAuth === '1' || requireAuth === 'map-manage' || isSystemUpdate || requireAuth === 'authen') {\r\n      if (isBranchLimit) {\r\n        status = 'stay';\r\n      } else {\r\n        status = 'go';\r\n      }\r\n    } else {\r\n      status = 'stay';\r\n    }\r\n  } else if (SSOPRole === '1') {\r\n    if (requireAuth === '1' || isSystemUpdate || requireAuth === 'authen') {\r\n      if (isBranchLimit) {\r\n        status = 'stay';\r\n      } else {\r\n        status = 'go';\r\n      }\r\n    } else {\r\n      status = 'stay';\r\n    }\r\n  } else {\r\n    if(requireAuth === 'authen') {\r\n      status = 'go';\r\n    } else {\r\n      status = 'home';\r\n    }\r\n    // status = 'home';\r\n  }\r\n  if(to.meta.title === \"认证页\") {\r\n    document.title = '认证页';\r\n  }\r\n  if (status === 'go') {\r\n    next()\r\n  } else if (status === 'stay') {\r\n    next(false);\r\n  } else if (status === 'home') {\r\n    // 防止无限循环\r\n    if (toPath === '/') {\r\n      next();\r\n    } else {\r\n      next('/');\r\n    }\r\n  }\r\n})\r\nrouter.afterEach((to) => {\r\n  if(to.meta.title === \"认证页\") {\r\n    document.title = '认证页';\r\n  } else {\r\n    document.title = '统一用户认证管理平台';\r\n  }\r\n  // document.title = '统一用户认证管理平台';\r\n})\r\n\r\nexport default router\r\n"]}